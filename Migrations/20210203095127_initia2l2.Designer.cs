// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TekDesk.Data;

namespace TekDesk.Migrations
{
    [DbContext(typeof(TekDeskContext))]
    [Migration("20210203095127_initia2l2")]
    partial class initia2l2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TekDesk.Models.Artifact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SolutionID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("file")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SolutionID")
                        .IsUnique();

                    b.ToTable("Artifact");
                });

            modelBuilder.Entity("TekDesk.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.HasKey("ID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("TekDesk.Models.EmployeeNotification", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("QueryID")
                        .HasColumnType("int");

                    b.Property<string>("Notification")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("EmployeeID", "QueryID");

                    b.HasIndex("QueryID");

                    b.ToTable("EmployeeNotification");
                });

            modelBuilder.Entity("TekDesk.Models.EmployeeSubject", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("EmployeeSubject");
                });

            modelBuilder.Entity("TekDesk.Models.Query", b =>
                {
                    b.Property<int>("QueryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Added")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("QState")
                        .HasColumnType("int");

                    b.Property<int>("Tag")
                        .HasColumnType("int");

                    b.HasKey("QueryID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Query");
                });

            modelBuilder.Entity("TekDesk.Models.Solution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Added")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("QueryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("QueryID");

                    b.ToTable("Solution");
                });

            modelBuilder.Entity("TekDesk.Models.Subject", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("TekDesk.Models.Artifact", b =>
                {
                    b.HasOne("TekDesk.Models.Solution", "Solution")
                        .WithOne("Artifact")
                        .HasForeignKey("TekDesk.Models.Artifact", "SolutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("TekDesk.Models.EmployeeNotification", b =>
                {
                    b.HasOne("TekDesk.Models.Employee", "Employee")
                        .WithMany("EmployeeNotifications")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TekDesk.Models.Query", "Query")
                        .WithMany("EmployeeNotifications")
                        .HasForeignKey("QueryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Query");
                });

            modelBuilder.Entity("TekDesk.Models.EmployeeSubject", b =>
                {
                    b.HasOne("TekDesk.Models.Employee", "Employee")
                        .WithMany("EmployeeSubjects")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TekDesk.Models.Subject", "Subject")
                        .WithMany("EmployeeSubjects")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("TekDesk.Models.Query", b =>
                {
                    b.HasOne("TekDesk.Models.Employee", "Employee")
                        .WithMany("Queries")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TekDesk.Models.Solution", b =>
                {
                    b.HasOne("TekDesk.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TekDesk.Models.Query", "Query")
                        .WithMany("Solutions")
                        .HasForeignKey("QueryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Query");
                });

            modelBuilder.Entity("TekDesk.Models.Employee", b =>
                {
                    b.Navigation("EmployeeNotifications");

                    b.Navigation("EmployeeSubjects");

                    b.Navigation("Queries");
                });

            modelBuilder.Entity("TekDesk.Models.Query", b =>
                {
                    b.Navigation("EmployeeNotifications");

                    b.Navigation("Solutions");
                });

            modelBuilder.Entity("TekDesk.Models.Solution", b =>
                {
                    b.Navigation("Artifact");
                });

            modelBuilder.Entity("TekDesk.Models.Subject", b =>
                {
                    b.Navigation("EmployeeSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
